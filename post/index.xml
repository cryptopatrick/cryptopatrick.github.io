<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Seamless Global Nature</title>
    <link>https://www.cryptopatrick.com/post/</link>
    <description>Recent content in Posts on Seamless Global Nature</description>
    <generator>Hugo</generator>
    <language>en-EN</language>
    <copyright>&#39;I write to understand as much as to be understood.&#39; â€”Elie Wiesel&lt;br&gt; (c) 2024 CryptoPatrick</copyright>
    <lastBuildDate>Sat, 05 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.cryptopatrick.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ðŸ¦€ Rust: Everydays</title>
      <link>https://www.cryptopatrick.com/blog/2025/07/05/rust-everydays/</link>
      <pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://www.cryptopatrick.com/blog/2025/07/05/rust-everydays/</guid>
      <description>Having spent considerable time with mathematics, Python, and reading up on Ai, I wanted to spend the next couple of weeks revising my Rust knowledge, from the ground up. I&amp;rsquo;ll be writing short posts everyday where I cover the language, idiomatic patterns, and interesting crates. This series is inspired by one of my favorite artists, Beeple, who creates a piece of art everyday - hence the title of this series (Rust: Everyday).</description>
    </item>
    <item>
      <title>Summer Reading : Mathematics for Machine Learning</title>
      <link>https://www.cryptopatrick.com/blog/2025/06/22/summer-reading-mathematics-for-machine-learning/</link>
      <pubDate>Sun, 22 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.cryptopatrick.com/blog/2025/06/22/summer-reading-mathematics-for-machine-learning/</guid>
      <description>This summer I will be reading the book &lt;em&gt;Mathematics for Machine Learning&lt;/em&gt;, by marc Peter Deisenroth, A. Aldo Faisal, and Cheng Soon Ong. As one reviewer stated &amp;lsquo;This book provdides great coverage of allthe basic mathematical concepts for machine learning.&amp;rsquo;. The book has 12 chapters, and my goal is to read one chapter each week.</description>
    </item>
    <item>
      <title>Timed-Release-Crypto</title>
      <link>https://www.cryptopatrick.com/blog/2024/12/23/timed-release-crypto/</link>
      <pubDate>Mon, 23 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://www.cryptopatrick.com/blog/2024/12/23/timed-release-crypto/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Work_In_Progress-orange.svg&#34; alt=&#34;Version:0.1.0&#34;&gt;&#xA;&lt;img src=&#34;https://img.shields.io/badge/Text_Version-0.4.5-blue.svg&#34; alt=&#34;Version:0.1.0&#34;&gt;&#xA;&lt;img src=&#34;https://img.shields.io/badge/Source_Code_Builds-Yes-green.svg&#34; alt=&#34;Version:0.1.0&#34;&gt;&lt;/p&gt;&#xA;&lt;!--![Version:0.1.0](https://img.shields.io/badge/Version-0.5.0-white.svg)  --&gt;&#xA;&lt;!--[![Version:0.1.0](https://img.shields.io/badge/File-issue-orange.svg)](https://github.com/cryptopatrick/learn_wgpu/issues)--&gt;&#xA;&lt;br&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Preface:&lt;/strong&gt; I recently coded a tiny Rust library, implementing a cryptographic idea which had caught my interest. This post is my way of cementing my understanding of concepts which I found difficult. I&amp;rsquo;m &lt;em&gt;not&lt;/em&gt; a cryptographer and make zero guarantees regarding the correctness of the code or math in this post. One final note, no Ai was used in writing the story in this post, I wrote it myself, so you can expect it to suck lol.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Squarings modulo n per second</title>
      <link>https://www.cryptopatrick.com/blog/2024/12/19/squarings-modulo-n-per-second/</link>
      <pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://www.cryptopatrick.com/blog/2024/12/19/squarings-modulo-n-per-second/</guid>
      <description>A quick, non-scientific, look at how we might estimate the number of squarings modulo n that a computer can perform per second.</description>
    </item>
    <item>
      <title>The TypeState Pattern</title>
      <link>https://www.cryptopatrick.com/blog/2024/12/10/the-typestate-pattern/</link>
      <pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://www.cryptopatrick.com/blog/2024/12/10/the-typestate-pattern/</guid>
      <description>TypeState is a powerful design pattern that we can use to provide compiletime checks based on the state of things. This post is my way of writing about what I&amp;rsquo;m learning with the hopes that it&amp;rsquo;ll stick better.</description>
    </item>
  </channel>
</rss>
